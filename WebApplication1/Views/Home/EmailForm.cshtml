@model WebApplication1.Models.EmailModel
@{
    ViewBag.Title = "Send Email";
}

<h2>Send Email</h2>

@using (Html.BeginForm("SendEmail", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <label for="Email">To Email:</label>
        @Html.TextBoxFor(model=>model.ToEmail, null, new { @class = "form-control", type = "email", required = "required" })
    </div>
    <div class="form-group">
        <label for="Subject">Subject:</label>
        @Html.TextBoxFor(model => model.Subject, null, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        <label for="Body">Body:</label>
        @Html.TextAreaFor(model => model.Body, new { @id = "BodyEditor", @class = "form-control", rows = 10 })
    </div>
    <button type="submit" class="btn btn-primary">Send Email</button>
}

<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script>
    const example_image_upload_handler = (blobInfo, progress) => new Promise((resolve, reject) => {
        const xhr = new XMLHttpRequest();
        xhr.withCredentials = false;
        xhr.open('POST', '@Url.Action("UploadImage", "Home")');

        xhr.upload.onprogress = (e) => {
            progress(e.loaded / e.total * 100);
        };

        xhr.onload = () => {
            if (xhr.status === 403) {
                reject({ message: 'HTTP Error: ' + xhr.status, remove: true });
                return;
            }

            if (xhr.status < 200 || xhr.status >= 300) {
                reject('HTTP Error: ' + xhr.status);
                return;
            }

            const json = JSON.parse(xhr.responseText);

            if (!json || typeof json.location != 'string') {
                reject('Invalid JSON: ' + xhr.responseText);
                return;
            }

            resolve(json.location);
        };

        xhr.onerror = () => {
            reject('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);
        };

        const formData = new FormData();
        formData.append('file', blobInfo.blob(), blobInfo.filename());

        xhr.send(formData);
    });
    tinymce.init({
        selector: '#BodyEditor',
        plugins: 'image code',
        toolbar: 'undo redo | link image | code',
        images_upload_url: '@Url.Action("UploadImage","Home")',
        images_upload_handler: example_image_upload_handler
    });
</script>
